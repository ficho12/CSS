    var rms_preview = false;
    /* Revisamos si estamos en una preview */
    if (window.parent.location.pathname.includes('rmsPreview') ||Â window.parent.location.pathname.includes('/rms/preview/')) {
        rms_preview = true;
    }function setAttributes(el, attrs) {
  for(var key in attrs) {
    el.setAttribute(key, attrs[key]);
  }
}
function setStyles(el, attrs){
    for(var key in attrs){
        el.style[key] = attrs[key];
    }
}
function showTransition(t){
  setStyles(transitionContainer, {"display": "block", "visibility": "visible"});
  setStyles(transitionAnimation, {"height": "100%", "width": "100%"});

  transitionAnimation.src = t + '?sURL='+ encodeURI(window.location.href);
}
function generateElement(tag, opt){
    let t = document.createElement(tag);

    for(var key in opt) {
        t.setAttribute(key, opt[key]);
    }

    return t;
}
function rmsDebugger(mss, type, format){
    format = format || '';
    for(let key in mss){
        let f = format !== '' ? format : key == 'title' ? 'color: #cecece; background-color: #8A0808;' : 'color: #cecece;';

        console[type]('%c' + mss[key], f);
    }

    console[type]('%c------------------', 'color: #cecece; background-color: #8A0808;');
}
function minItemMobileV2(id,width,height,step,centerId){
    var nextExp = false;

    if(id=='body'){
	    currentPTop = parseInt(document.body.style.paddingTop.replace('px',''));
             if(currentPTop > height){
	             if((currentPTop+step) >= height){
		             document.body.style.paddingTop = (currentPTop-(step+5))+'px';
		             nextExp = true;
	             }else{
		             document.body.style.paddingTop = height+'px';
	             }

             }


	    if(nextExp){
	        setTimeout(function(){minItemMobileV2(id,width,height,step,centerId)},3);
        }else{
            pnetSkinBackExpand.style.opacity = "0";
          if (resizeOnExpanding) {

              resizePnetSkinMobile();
          }
          isExpanding = false;
        }

    }else if(document.getElementById(id)!=undefined){

        if(width!=''){
            currentWidth = parseInt(document.getElementById(id).style.width.replace('px',''));
             if(currentWidth > width){
	             if((currentWidth+-step) >= width){
		             document.getElementById(id).style.width = (currentWidth-(step+4))+'px';

		             nextExp = true;
		             if(centerId!='' && document.getElementById(centerId)!=undefined){
			             currentRight = parseInt(document.getElementById(centerId).style.right.replace('px',''));
                         if((currentRight+(step+4)/2) < pnetLimitRight){
                            document.getElementById(centerId).style.right = pnetLimitRight+'px';
                         }else{
                            document.getElementById(centerId).style.right = (currentRight+(step+4)/2)+'px';
                         }

			             document.getElementById(centerId).style.width = (currentWidth-(step+4))+'px';
		             }
	             }else{
		             document.getElementById(id).style.width = width+'px';
	             }

             }
        }

        if(height!=''){
            currentHeight = parseInt(document.getElementById(id).style.height.replace('px',''));
             if(currentHeight > height){
	             if((currentHeight-step) >= height){
		             document.getElementById(id).style.height = (currentHeight-step)+'px';
		             if(centerId!='' && document.getElementById(centerId)!=undefined){
			              currentTop = parseInt(document.getElementById(centerId).style.top.replace('px',''));
                         if((currentTop-(step)) < pnetPlayerTop){
                            document.getElementById(centerId).style.top = pnetPlayerTop+'px';
                         }else{
                            document.getElementById(centerId).style.top = (currentTop-(step))+'px';
                         }
			              document.getElementById(centerId).style.height = (currentHeight-step)+'px';
		             }
		             nextExp = true;
	             }else{
		             document.getElementById(id).style.height = height+'px';
	             }

             }
        }

        if(nextExp){
	        setTimeout(function(){minItemMobileV2(id,width,height,step,centerId)},5);
             expTrans = true;
        }else{
            pnetSkinBackExpand.style.opacity = "0";
            if (resizeOnExpanding) {

                resizePnetSkinMobile();
            }
            isExpanding = false;
            expTrans = false;

        }
     }
}
function expItemMobileV2(id,width,height,step,centerId){
    var nextExp = false;
    if(id=='body'){
	    currentPTop = parseInt(document.body.style.paddingTop.replace('px',''));
             if(currentPTop < height){
	             if((currentPTop+step) <= height){
		             document.body.style.paddingTop = (currentPTop+step+5)+'px';
		             nextExp = true;
	             }else{
		             document.body.style.paddingTop = height+'px';
	             }
             }
	    if(nextExp){
	        setTimeout(function(){expItemMobileV2(id,width,height,step,centerId)},3);
        }
        else {
          if (resizeOnExpanding) {

              resizePnetSkinMobile();
          }
          isExpanding = false;
        }
    }else if(document.getElementById(id)!=undefined){
        if(width!=''){
            currentWidth = parseInt(document.getElementById(id).style.width.replace('px',''));
             if(currentWidth < width){
	             if((currentWidth+step) <= width){
		             document.getElementById(id).style.width = (currentWidth+step+4)+'px';

		             nextExp = true;
		             if(centerId!='' && document.getElementById(centerId)!=undefined){
			             currentRight = parseInt(document.getElementById(centerId).style.right.replace('px',''));
                         if((currentRight-(step+4)/2) < pnetLimitRight){
                            document.getElementById(centerId).style.right = pnetLimitRight+'px';
                         }else{
                            document.getElementById(centerId).style.right = (currentRight-(step+4)/2)+'px';
                         }
			             document.getElementById(centerId).style.width = (currentWidth+step+4)+'px';
		             }
	             }else{
		             document.getElementById(id).style.width = width+'px';
	             }
             }
        }
        if(height!=''){
            currentHeight = parseInt(document.getElementById(id).style.height.replace('px',''));
             if(currentHeight < height){
	             if((currentHeight+step) <= height){
		             document.getElementById(id).style.height = (currentHeight+step)+'px';
		             if(centerId!='' && document.getElementById(centerId)!=undefined){
			              currentTop = parseInt(document.getElementById(centerId).style.top.replace('px',''));
                         if((currentTop+(step)) > pnetLimitTop){
                            document.getElementById(centerId).style.top = pnetLimitTop+'px';
                         }else{
                            document.getElementById(centerId).style.top = (currentTop+(step))+'px';
                         }
			              document.getElementById(centerId).style.height = (currentHeight+step)+'px';
		             }
		             nextExp = true;
	             }else{
		             document.getElementById(id).style.height = height+'px';
	             }
             }
        }
        if(nextExp){
	        setTimeout(function(){expItemMobileV2(id,width,height,step,centerId)},5);
            expTrans = true;
        }else{
          if (resizeOnExpanding) {

              resizePnetSkinMobile();
          }
          isExpanding = false;
          expTrans = false;
        }
    }
}

function decodeURLRecursively(url, itera) {
    function isEncoded(uri) {
        uri = uri || '';
        return uri !== decodeURIComponent(uri);
    }
    if(isEncoded(url)){
        return decodeURLRecursively(decodeURIComponent(url), (itera + 1) );
    }
    return {"url": url, "i": itera };
}

function encodeURLRecursively(url, itera = 1){
    let t = url;
    for(let i = 0;i<itera;i++){
        t = encodeURIComponent(t);
    }
    return t;
}
if(0){ rmsDebugger({ 'title': '#IGNITE/I25uPLheWD', 'value': 'INIT CREATIVE' }, 'debug'); }

var rmsDevice = 1;

switch (rmsDevice) {
    case 1:
        raiEnvDevice = 'desktop';
        break;
    case 2:
        raiEnvDevice = 'mobile';
        break;
    case 3:
        raiEnvDevice = 'tablet';
        break;
}var trackContent = 'idTrackingContent';

var rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601 = document.createElement('div');
rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601.setAttribute('id', 'trackContent_a7d2fff9bba2741c779995c7b98e5601');
rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601.style.top = '0px';
rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601.style.left = '0px';

rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601.style.zIndex = '9999';

rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601.style.position = 'absolute';

document.getElementById('36a33102ac02c8895d0f5bf25c8539fd').appendChild(rmsCREATracking_a7d2fff9bba2741c779995c7b98e5601);

function setTracking_a7d2fff9bba2741c779995c7b98e5601(url, id) {

  if(typeof url == 'string'){
      var time = Math.floor((Math.random()*999999999999999)+1);
      var tmpUrl = url.replace('[timestamp]', time);
      tmpUrl += '&rmsrnd=' + (Math.floor(Date.now() / 1000));

      var tagImg = document.createElement('img');
      tagImg.src = tmpUrl;
      tagImg.style.width = '0px';
      tagImg.style.height = '0px';
      tagImg.style.cssFloat = 'left';
      document.getElementById('trackContent_a7d2fff9bba2741c779995c7b98e5601').appendChild(tagImg);

  } else if(typeof url == 'object') {
		url.forEach(function(element){
            if(element !== ''){
                tmpURL = element;
                var tmpRnd = Math.floor((Math.random()*999999999999999)+1);
                tmpURL = tmpURL.replace('[timestamp]',tmpRnd);
                tmpURL = tmpURL.replace('[rms_timestamp]',tmpRnd);

                if(tmpURL.includes('richaudience.com')){
                    tmpURL += '&rmsrnd=' + (Math.floor(Date.now() / 1000));
                }

                tImg = document.createElement('img');
                tImg.src = tmpURL;
                tImg.style.width = '0px';
                tImg.style.height = '0px';
                tImg.style.cssFloat = 'left';
                document.getElementById('trackContent_a7d2fff9bba2741c779995c7b98e5601').appendChild(tImg);
            }
		});
	}
}

function setJSTracking_a7d2fff9bba2741c779995c7b98e5601 (url , id) {
  var time = Math.floor((Math.random()*999999999999999)+1);
  var tmpUrl = url.replace('[timestamp]', time);
  var tagJS = document.createElement('script');
  let rmsEnvTrackW = '100%';
  let rmsEnvTrackH = '100%';

  switch (raiEnvDevice) {
    case 'desktop':
      raiContainerLayer = 'rmsRightWrapper';
      rmsEnvTrackW = window.innerWidth+'px';
      rmsEnvTrackH = window.innerHeight+'px';
      break;
    case 'mobile':
      raiContainerLayer = 'pnetSkinPhone';
      break;
    case 'tablet':
      raiContainerLayer = 'pnetSkinTablet';
      break;
    }
  
    if(raiEnvDevice == 'desktop' && !document.querySelector('#rmsRightWrapper') &&  tmpUrl.includes('[rai_layer_id') ){
    rmsMargin = typeof rmsSkinSize == 'undefined' ? 1000/2 : rmsSkinSize/2;

    var rmsRightWrapper = generateElement('div', { id: 'rmsRightWrapper', style: 'position:fixed; height:100%; width: 500px; left:50%; margin-left: '+rmsMargin+'px; z-index:-1; top:0;' });
    document.body.appendChild(rmsRightWrapper);
  }

  tmpUrl = tmpUrl.replace('[rai_layer_id]', raiContainerLayer);

  tagJS.type = "application/javascript";
	tagJS.src = tmpUrl;

  var rmsEnvTrack = null;

    if(!document.querySelector("#rmsEnvTrack")){
    rmsEnvTrack = document.createElement("div");
    rmsEnvTrack.setAttribute("id", "rmsEnvTrack");

    rmsEnvTrack.style.width = "100%";
    rmsEnvTrack.style.height = "100%";
    rmsEnvTrack.style.position = "absolute";

    rmsEnvTrack.style.zIndex = "-1";

    rmsEnvTrack.style.top = "0";
    rmsEnvTrack.style.left = "0";

    var rmsEnvTrackPix = document.createElement("img");
    rmsEnvTrackPix.src = "//s1.richmediastudio.com/assets/img/trans.png";

    rmsEnvTrackPix.style.width = rmsEnvTrackW;
    rmsEnvTrackPix.style.height = rmsEnvTrackH;
    rmsEnvTrack.appendChild(rmsEnvTrackPix);
  }else{
    rmsEnvTrack = document.querySelector("#rmsEnvTrack");
  }

		                if(!document.querySelector("#rmsEnvTrack")){
                  if(document.getElementById('rmsSkin3d') != null){
                    document.getElementById('rmsSkin3d').appendChild(rmsEnvTrack);
                  }else{
                                          
                                                  document.querySelector("#pbnetVideo").insertAdjacentElement('afterbegin', tagJS);
                                            
                                      }
                }
              }

function setIframeTracking_a7d2fff9bba2741c779995c7b98e5601 (url , id) {
  var time = Math.floor((Math.random()*999999999999999)+1);
  var tmpUrl = url.replace('[timestamp]', time);

  var tagIframe = document.createElement('iframe');
	tagIframe.src = tmpUrl;
  tagIframe.width = 1;
  tagIframe.height = 1;
  tagIframe.marginWidth = 0;
  tagIframe.marginHeight = 0;
  tagIframe.frameBorder = 0;
  tagIframe.scrolling = 'no';

		               if (document.getElementById('rmsSkin3d') != null) {
                document.getElementById('rmsSkin3d').appendChild(tagIframe);
              } else {
                document.getElementById('pbnetVideo').appendChild(tagIframe);
              }
        			}

function setIMGTracking_a7d2fff9bba2741c779995c7b98e5601 (url , id) {
  var time = Math.floor((Math.random()*999999999999999)+1);
  var tmpUrl = url.replace('[timestamp]', time);

  
  if (tmpUrl.includes('sync.richaudience.com/')){
    tmpUrl = tmpUrl.replace('${GDPR_CONSENT_755}', 'CPVTWEAPVTWEAAHABBENCECsAP_AAH_AAAAAIltf_X__b3_j-_5_f_t0eY1P9_7_v-0zjhfdt-8N3f_X_L8X42M7vF36pq4KuR4Eu3LBIQdlHOHcTUmw6okVrzPsbk2cr7NKJ7PEmnMbO2dYGH9_n93TuZKY7______z_v-v_v____f_7-3_3__5_3---_e_V_99zLv9____39nP___9v-_9_____4IhgEmGpeQBdiWODJtGlUKIEYVhIdAKACigGFoisIHVwU7K4CfUELABCagIwIgQYgowYBAAIBAEhEQEgB4IBEARAIAAQAqwEIACNgEFgBYGAQACgGhYgRQBCBIQZHBUcpgQESLRQT2ViCUHexphCGWWAFAo_oqEBEoQQLAyEhYOY4AkBLhZIFmKF8gAAAAA.f_gAD_gAAAAA');
  }

  var tagImg = document.createElement('img');
  tagImg.src = tmpUrl;
  tagImg.style.position = 'absolute';
  tagImg.style.width = '0px';
  tagImg.style.height = '0px';
  tagImg.style.top = '0px';
  tagImg.style.left = '0px';

  var rms_oop_tracking_device = 1;
  switch (rms_oop_tracking_device) {
    case 1:
      if (document.getElementById('rmsSkin3d') != null) {
        document.getElementById('rmsSkin3d').appendChild(tagImg);
      } else {
        document.getElementById('pbnetVideo').appendChild(tagImg);
      }
      break;
    case 2:
      document.getElementById('pnetSkinPhone').appendChild(tagImg);
      break;
    case 3:
      document.getElementById('pnetSkinTablet').appendChild(tagImg);
      break;
  }
}

function setNielsenTracking_a7d2fff9bba2741c779995c7b98e5601(url, adId, opt){
    var time = Math.floor((Math.random()*999999999999999)+1);
    var tmpUrl = url.replace('[timestamp]', time);

    
    tmpUrl = tmpUrl.replace('[rmsAdId]', adId);
    tmpUrl = tmpUrl.replace('[rmsOpt]', opt);
    tmpUrl = tmpUrl.replace('[rmsPlt]', 'DSK');

    var tagImg = document.createElement('img');
    tagImg.src = tmpUrl;
    tagImg.style.display = 'none';

    if(document.querySelector('#trackContent_a7d2fff9bba2741c779995c7b98e5601') !== null){
        document.querySelector('#trackContent_a7d2fff9bba2741c779995c7b98e5601').appendChild(tagImg);
    }else{
        document.body.appendChild(tagImg);
    }
}

function getImpV2_a7d2fff9bba2741c779995c7b98e5601(args){
  let time = Math.floor((Math.random()*999999999999999)+1);
  let url = 'https://srms.richmediastudio.com/?type=3&hasConsent=1&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v=a7d2fff9bba2741c779995c7b98e5601&idAgc=466&cmp=8547&lnt=12468&crt=32304&refDomain=vidaextra.com&ref=https%3A%2F%2Fwww.vidaextra.com%2Flistas%2Fmejores-juegos-2022';
  let gdpr = '1';
  let gdprConsent = 'CPVTWEAPVTWEAAHABBENCECsAP_AAH_AAAAAIltf_X__b3_j-_5_f_t0eY1P9_7_v-0zjhfdt-8N3f_X_L8X42M7vF36pq4KuR4Eu3LBIQdlHOHcTUmw6okVrzPsbk2cr7NKJ7PEmnMbO2dYGH9_n93TuZKY7______z_v-v_v____f_7-3_3__5_3---_e_V_99zLv9____39nP___9v-_9_____4IhgEmGpeQBdiWODJtGlUKIEYVhIdAKACigGFoisIHVwU7K4CfUELABCagIwIgQYgowYBAAIBAEhEQEgB4IBEARAIAAQAqwEIACNgEFgBYGAQACgGhYgRQBCBIQZHBUcpgQESLRQT2ViCUHexphCGWWAFAo_oqEBEoQQLAyEhYOY4AkBLhZIFmKF8gAAAAA.f_gAD_gAAAAA';

    for(let i in args){

      switch(i){
        case "ref":
          if (typeof(args[i]) !== "undefined" && args[i] !== null) {
            var urlAux = new URL(args[i]);
            refDomain = urlAux.host;
            var urltmp = new URL(url);
            var params = urltmp.searchParams;
            var host = urltmp.origin;
            params.set('refDomain',refDomain);
            params.set('ref',encodeURIComponent(args[i]));
            url = host+'/?'+params.toString();
          }
        break;
        case "stId":
          if (typeof(args[i]) !== "undefined" && args[i] !== null) {
            var urltmp = new URL(url);
            var params = urltmp.searchParams;
            var host = urltmp.origin;

            params.set('stid', args[i]);
            url = host+'/?'+params.toString();
          }
        break;
        default:
          url += '&' + i + '=' + args[i];
        break;
      }

    }

    url += '&rnd=' + time;
    url += '&gdpr=' + gdpr;
    url += '&gdpr_consent=' + gdprConsent;

    let img = new Image();

    img.onload = () => {
        if(0){ rmsDebugger({ 'title': '#IGNITE/I25uPLheWD', 'value': 'IMPRESSION STANDARD' }, 'debug'); }
    }

    img.src = url;
}
function rmsSetCustomEvent_a7d2fff9bba2741c779995c7b98e5601(args, mss){
    let time = Math.floor((Math.random()*999999999999999)+1);
    let url = 'https://srms.richmediastudio.com/?type=3&hasConsent=1&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v=a7d2fff9bba2741c779995c7b98e5601&idAgc=466&cmp=8547&lnt=12468&crt=32304&refDomain=vidaextra.com&ref=https%3A%2F%2Fwww.vidaextra.com%2Flistas%2Fmejores-juegos-2022';
    let img = new Image();
    let refDomain = '';

    for(let i in args){
      if (i == 'ref'){
        if (typeof(args[i]) !== "undefined" && args[i] !== null) {
          let urlAux = new URL(args[i]);
          refDomain = urlAux.host;
          let urltmp = new URL(url);
          let params = urltmp.searchParams;
          let host = urltmp.origin;
          params.set('refDomain',refDomain);
          params.set('ref',encodeURIComponent(args[i]));
          url = host+'/?'+params.toString();
        }
      }else{
        url += '&' + i + '=' + args[i];
      }
    }
  
    url += '&rnd=' + time;

    if(typeof rmsContexta7d2fff9bba2741c779995c7b98e5601 !== "undefined" && rmsContexta7d2fff9bba2741c779995c7b98e5601.rmsRaPla !== null ){
      url += '&rmsPla=' + rmsContexta7d2fff9bba2741c779995c7b98e5601.rmsRaPla;
    }else{
      url += '&rmsPla=';
    }

    img.onload = () => {
      if(0){ rmsDebugger({ 'title': '#IGNITE/I25uPLheWD', 'value': mss }, 'debug'); }
    }

    img.src = url;
}function getImp_a7d2fff9bba2741c779995c7b98e5601 (idVst, idAgc, idCmp, idLnt, idCrt, idCre, refererDomain, referer) {
  var time = Math.floor((Math.random()*999999999999999)+1);
  var url = 'https://srms.richmediastudio.com/'+'?type=3&hasConsent=1&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v='+idVst+'&idAgc='+idAgc+'&cmp='+idCmp+'&lnt='+idLnt+'&crt='+idCrt+'&cre='+idCre+'&sbcre=0'+'&e=1'+'&ref='+referer+'&refDomain='+refererDomain+'&rnd='+time;
  setTracking_a7d2fff9bba2741c779995c7b98e5601(url, "null");
}

function getClick_a7d2fff9bba2741c779995c7b98e5601 (idVst, idAgc, idCmp, idLnt, idCrt, idCre, refererDomain, referer, rdt){
  var time = Math.floor((Math.random()*999999999999999)+1);
  rdt = rdt.replace("%5Btimestamp%5D", time);
  rdt = rdt.replace("%255Btimestamp%255D", time);
  if(0){ rmsDebugger({ 'title': '#IGNITE/I25uPLheWD', 'value': "CLICK CLASICO" }, 'debug'); }
  return 'https://srms.richmediastudio.com/'+'?type=3&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v='+idVst+'&idAgc='+idAgc+'&cmp='+idCmp+'&lnt='+idLnt+'&crt='+idCrt+'&cre='+idCre+'&sbcre=0'+'&e=8'+'&ref='+referer+'&refDomain='+refererDomain+'&rnd='+time+'&redir='+rdt;
}
function getToggleClick_a7d2fff9bba2741c779995c7b98e5601 (idVst, idAgc, idCmp, idLnt, idCrt, idCre, sbCre =0, refererDomain, referer, rdt){
  var time = Math.floor((Math.random()*999999999999999)+1);
  rdt = rdt.replace("%5Btimestamp%5D", time);
  rdt = rdt.replace("%255Btimestamp%255D", time);

  if(0){ rmsDebugger({ 'title': '#IGNITE/I25uPLheWD', 'value': "CLICK CLASICO" }, 'debug'); }
  return 'https://srms.richmediastudio.com/'+'?type=3&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v='+idVst+'&idAgc='+idAgc+'&cmp='+idCmp+'&lnt='+idLnt+'&crt='+idCrt+'&cre='+idCre+'&sbcre='+sbCre+'&e=8'+'&ref='+referer+'&refDomain='+refererDomain+'&rnd='+time+'&redir='+rdt;
}

function setCustomEvent_a7d2fff9bba2741c779995c7b98e5601 (idVst, idAgc, idCmp, idLnt, idCrt, idCre, event, refererDomain, referer,type = 3,sbCre = 0) {
  var time = Math.floor((Math.random()*999999999999999)+1);
	var url = 'https://srms.richmediastudio.com/'+'?type='+type+'&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v='+idVst+'&idAgc='+idAgc+'&cmp='+idCmp+'&lnt='+idLnt+'&crt='+idCrt+'&cre='+idCre+'&sbcre='+sbCre+'&e='+event+'&ref='+referer+'&refDomain='+refererDomain+'&rnd='+time;
  setTracking_a7d2fff9bba2741c779995c7b98e5601(url, "null");
}

function getCustomEvent_a7d2fff9bba2741c779995c7b98e5601 (idVst, idAgc, idCmp, idLnt, idCrt, idCre, event, refererDomain, referer,type = 3,sbCre = 0) {
  var time = Math.floor((Math.random()*999999999999999)+1);
	var url = 'https://srms.richmediastudio.com/'+'?type='+type+'&stid=0&sgn=VFJ5WEhWbG5EMzB3cXhNM2lMZnVRV1JxMjk1aG5Gd1ZqYkdOTG9GNUxOeitGQUs5cE5VWnJjTXFBTmpCSEgxTnpNNHBiR2NsaEY5aTBwUjZLL0wydDFzVVA2WEhvRjBHMElybUFIanlEWmwyQ0NKa0ZOOFRHa3AwM1ZXR2xUT0srcEJuaFRFUTJiOWNHM2JnY0JObHlWeXpXdXZKaWpVMFkxdWk2dnpacG5pLzlUSGVoSUE0eUxyK1BVWXM4elVnWkhib3orQ3FSSlBQZFl2VnNjNU84UT09IyMCHlCTg%2BevO9uGOB5TyT%2BZ&v='+idVst+'&idAgc='+idAgc+'&cmp='+idCmp+'&lnt='+idLnt+'&crt='+idCrt+'&cre='+idCre+'&sbcre='+sbCre+'&e='+event+'&ref='+referer+'&refDomain='+refererDomain+'&rnd='+time;
  return url;
}

function setCustomEventRaw_a7d2fff9bba2741c779995c7b98e5601 (idCrt, idCre,refererDomain, referer) {
	var url = 'https://srms.richmediastudio.com/'+'?bl=1&idcrt='+idCrt+'&idcre='+idCre+'&ref='+referer+'&refDomain='+refererDomain;
  setTracking_a7d2fff9bba2741c779995c7b98e5601(url, "null");
}


function pnetCheckClick(e){
  var x;
	var y;
	if (e.pageX || e.pageY) {
	  x = e.pageX;
	  y = e.pageY;
	}
	else {
	  x = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;
	  y = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;
	}
  if(isNaN(x) || isNaN(y) || x==0 || y==0){
      return false;
  }else{
      return true;
  }
}rmsTypeSkin = "";
pnetClickUrlSkin = getClick_a7d2fff9bba2741c779995c7b98e5601('a7d2fff9bba2741c779995c7b98e5601', 466, 8547, 12468, 32304, 1, encodeURI('vidaextra.com'), encodeURIComponent('https://www.vidaextra.com/listas/mejores-juegos-2022'), encodeURI('https%3A%2F%2Ftrack.adform.net%2FC%2F%3Fbn%3D53104717'));
pbnetSkinUrl = getClick_a7d2fff9bba2741c779995c7b98e5601('a7d2fff9bba2741c779995c7b98e5601', 466, 8547, 12468, 32304, 1, encodeURI('vidaextra.com'), encodeURIComponent('https://www.vidaextra.com/listas/mejores-juegos-2022'), encodeURI('https%3A%2F%2Ftrack.adform.net%2FC%2F%3Fbn%3D53104717'));
function videoKeep(expand){}        document.body.insertAdjacentHTML('afterbegin', `<link rel=\"stylesheet\" type=\"text/css\" href=\"https://s1.richmediastudio.com/assets/css/rmsSkinMultipantalla.css\">`);
        document.body.insertAdjacentHTML('afterbegin', `<link rel=\"stylesheet\" type=\"text/css\" href=\"https://s1.richmediastudio.com/assets/css/full_skin_video.css\">`);

        document.body.insertAdjacentHTML('beforeend', `<div id=\"pbnetVideo\"><img id=\"pbnetPix\" src=\"//s1.richmediastudio.com/assets/img/trans.png\" style=\"width:100%; height:100%;\"></div>`);
        rmsTypeSkin = "Classic Skin";
         var hasVideoHeader = false;  
function resizeSkin(s){
    let rmsBgSkin1000 = 'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_1qRyLrKMYI.jpg';
    let rmsBgSkin1200 = 'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_oJXSD4p0lx.jpg';
    let rmsBgStyle = 'background-image:url(\'[RMSBGSKIN]\') !important;background-color: !important; background-repeat:no-repeat !important; backface-visibility: hidden';
    let rmsVideoSkin = '';

    if(typeof rmsSkinSize !== 'undefined'){
        s = rmsSkinSize;
    }

    if(s <= 1000){
        rmsBgStyle = 'background-image:url(\'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_1qRyLrKMYI.jpg\') !important;background-color: !important; background-repeat:no-repeat !important; backface-visibility: hidden';
        rmsBgSkinImage = 'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_1qRyLrKMYI.jpg';
    }else{
        rmsBgStyle = "background-image:url(\'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_oJXSD4p0lx.jpg\') !important;background-color: !important; background-repeat:no-repeat !important; backface-visibility: hidden";
        rmsBgSkinImage = 'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_oJXSD4p0lx.jpg';
        if(typeof rmsLayer1200 !== 'undefined'){
            if(rmsLayer1200 == false){
            rmsLayer1000.forEach( (e, index) => {
                chromaKey('https://s1.richmediastudio.com/display/' + e.hash + '.' + e.ext ,  index );
            });
           }else{
            rmsLayer1200.forEach( (e, index) => {
                chromaKey('https://s1.richmediastudio.com/display/' + e.hash + '.' + e.ext ,  index );
            });
        }
        }
    }
    document.body.style.cssText += rmsBgStyle;
}
var rms_oop_skin_type = "skinRON";
var rms_oop_skin_background_type = "img";
pnetURLSkinIframe = '?sURL='+encodeURI(window.location.href);
pnetURLSkinIframe1200 = '?sURL='+encodeURI(window.location.href);

pnetHeightCab = 250;
pnetIframeUrl = 'https://s1.richmediastudio.com/display/I25uPLheWD_03YDjoqdur_1qRyLrKMYI.jpg'+encodeURI(window.location.href);
function OpenWin() {
    window.open(pnetClickUrlSkin);
  if (typeof pnetASClickTrack_SkinRON !== 'undefined') {
    setTracking_a7d2fff9bba2741c779995c7b98e5601(pnetASClickTrack_SkinRON, 0);
  }
}

    pbnetClick=function(e){
        var bglink=pnetClickUrlSkin;
        EE=e?e:event;
        if(!EE)return;
        var tg=EE.target?EE.target:EE.srcElement;

        //FUNCIÃN CLICK CERTIFICACIÃN
        if(typeof pbnetSpecialClick === 'function'){
            if(!pbnetSpecialClick(tg)){
            return false;
            }
        }

        if((!tg||tg.tagName!="BODY")&& tg.parentNode.tagName!="BODY" && tg.id !== "pnetMask" && tg.id !== "pbnetContPlayer" && tg.tagName!="HTML" ||tg.id=="pbnetPix"||tg.id=="pbnet"||tg.id=="rms_oop_contract"||tg.id=="mute"||tg.id=="fullscreen"||tg.id=="off" || tg.id.includes("pbnetHotPix")){
            return;
        }

        if (tg.id=="rms_ver_condiciones") {
            return;
        }

        if(!pnetCheckClick(e)){
            return false;
        }

        /* Nueva condicion por la cual hay que evaluar si el usuario ha hecho click en la mascara para habilitar el sonido del video y asi no redirigir ni expandir */
        if(tg.id == "pnetMask" && hasVideoHeader){
            let btnX = document.querySelector("#rmsBtnMuted").getBoundingClientRect().x;
            let btnY = document.querySelector("#rmsBtnMuted").getBoundingClientRect().y;
            let x = e.clientX;
            let y = e.clientY;

            if( x >= btnX && x <= (btnX + 35) && y >= btnY && y <= (btnY + 35) ){
                return;
            }
        }

        var BackLink=OpenWin();
    };
document.onclick=pbnetClick;

document.body.style.paddingTop = "250px";

function expandLimit(){}


resizeSkin(1000);

var pnetASInsertionId = 0;



setIMGTracking_a7d2fff9bba2741c779995c7b98e5601('https://track.adform.net/adfserve/?bn=53104717;1x1inv=1;srctype=3;ord=447844', '0');if (typeof pnetASImpTrack_SkinRON == 'function') {
	pnetASImpTrack_SkinRON();
}

if (typeof pnetASClickTrack_SkinRON !== 'undefined') {
} else {
	pnetASClickTrack_SkinRON = [];
}


/* SKIN CHAT */
var rmsScreenResolutionW = window.outerWidth | outerWidth;
var rmsScreenResolutionH = window.outerHeight | outerHeight;
var rmsScreenResolution = rmsScreenResolutionW.toString() + rmsScreenResolutionH.toString();
var rmsSbCre = '61' == "137" ? rmsScreenResolution : 0;

if (typeof rmsContexta7d2fff9bba2741c779995c7b98e5601 != 'undefined'){
    getImpV2_a7d2fff9bba2741c779995c7b98e5601({ cre: 1, sbcre: rmsSbCre, e: 1, ref: rmsContexta7d2fff9bba2741c779995c7b98e5601.rmsSiteReferrer, plid: rmsContexta7d2fff9bba2741c779995c7b98e5601.rmsRaPla, stId: rmsContexta7d2fff9bba2741c779995c7b98e5601.rmsRaSite });
}else{
    getImpV2_a7d2fff9bba2741c779995c7b98e5601({ cre: 1, sbcre: rmsSbCre, e: 1});
}
    if(typeof pnetInitSkin == 'function'){
		pnetInitSkin(rms_oop_skin_type);
	}var raidebug = true;

var geometryViewabilityCalculator = new OAVGeometryViewabilityCalculator();

var check = {
    percentObscured: 0,
    percentViewable: 0,
    acceptedViewablePercentage: 50,
    acceptedViewablePercentageImpression: 1,
    viewabiltyStatus: false,
    duration: 0
};

this.DEBUG_MODE = raidebug;

this.checkViewability = function(ad, statusCallback){
    var count = 0;
    var that = this;
    var timer = setInterval(function() {
        if (checkViewable(ad)) {
            count++;
        } else {
            count = 0;
        }
        check.duration = count*100;
        if (count >= 9) {
            check.viewabiltyStatus = true;
            if(!that.DEBUG_MODE)
                clearInterval(timer);
        }
        statusCallback(check);
    }, 100);
}

var checkViewable = function(ad) {
    if (ad == null){
        return false;
    }else{ 
        var adRect = ad.getBoundingClientRect();
        var totalArea = adRect.width * adRect.height;
        // According to MRC standards, larget ad unit size have only 30% viewable requirements
        if(totalArea >= 242500)
            check.acceptedViewablePercentage = 30;

        if (checkCssInvisibility(ad) === true){
            return false;
        }

        checkGeometry(ad);

        if(check.percentViewable && check.percentViewable < check.acceptedViewablePercentage){
            return false;
        }

        if(!check.percentViewable)
            return false;

        return true;
    }
};

/**
* Performs the geometry technique to determine viewability. First gathers
* information on the viewport and on the ad. Then compares the two to
* determine what percentage, if any, of the ad is within the bounds
* of the viewport.
* @param {Element} ad The HTML Element to measure
*/
var checkGeometry = function (ad) {
    check.percentObscured = check.percentObscured || 0;
    var viewabilityResult = geometryViewabilityCalculator.getViewabilityState(ad, window);
    if (!viewabilityResult.error) {
        check.percentViewable = viewabilityResult.percentViewable - check.percentObscured;
    }
    return viewabilityResult;
};

/**
 * Checks if the ad is made invisible by css attribute 'visibility:hidden'
 * or 'display:none'.
 * Is so, viewability at the time of this check is 'not viewable' and no further check
 * is required.
 * These properties are inherited, so no need to parse up the DOM hierarchy.
 * If the ad is in an iframe inheritance is restricted to elements within
 * the DOM of the iframe document
 * @param {Element} ad The HTML Element to measure
 */
var checkCssInvisibility = function (ad) {
    var style = window.getComputedStyle(ad, null);
    var visibility = style.getPropertyValue('visibility');
    var display = style.getPropertyValue('display');
    if ( visibility == 'hidden' || display == 'none' ){
        return true;
    }
    return false;
};

var overlapping = function(adRect, elem ){
    var adArea = adRect.width * adRect.height;
    var  x_overlap = Math.max(0, Math.min(adRect.right, elem.right) - Math.max(adRect.left, elem.left));
    var  y_overlap = Math.max(0, Math.min(adRect.bottom, elem.bottom) - Math.max(adRect.top, elem.top));
    return (x_overlap * y_overlap) / adArea;
}

function OAVGeometryViewabilityCalculator() {

    this.getViewabilityState = function (element, contextWindow) {
        var minViewPortSize = getMinViewPortSize(),
            viewablePercentage;
        if (minViewPortSize.area == Infinity) {
            return { error: 'Failed to determine viewport'};
        }
        var assetRect = element.getBoundingClientRect();
        var adArea = assetRect.width * assetRect.height;
        if ((minViewPortSize.area / adArea) < 0.5) {
            // no position testing required if viewport is less than half the area of the ad
            viewablePercentage = Math.floor(100 * minViewPortSize.area / adArea);
        }else{
            var viewPortSize = getViewPortSize(window.top),
                visibleAssetSize = getAssetVisibleDimension(element, contextWindow);
            //var viewablePercentage = getAssetViewablePercentage(assetSize, viewPortSize);
            //Height within viewport:
            if ( visibleAssetSize.bottom > viewPortSize.height ) {
                //Partially below the bottom
                visibleAssetSize.height -= (visibleAssetSize.bottom - viewPortSize.height);
            }
            if ( visibleAssetSize.top < 0 ) {
                //Partially above the top
                visibleAssetSize.height += visibleAssetSize.top;
            }
            if ( visibleAssetSize.left < 0 ) {
                visibleAssetSize.width += visibleAssetSize.left;
            }
            if ( visibleAssetSize.right > viewPortSize.width ) {
                visibleAssetSize.width -= ( visibleAssetSize.right - viewPortSize.width );
            }
            // Viewable percentage is the portion of the ad that's visible divided by the size of the ad
            viewablePercentage = Math.floor( 100 * ( visibleAssetSize.width * visibleAssetSize.height ) / adArea );
        }
        /*
        //Get ad dimensions:
        var assetRect = element.getBoundingClientRect();
        */
        return {
            clientWidth: viewPortSize ? viewPortSize.width : 0,
            clientHeight: viewPortSize ? viewPortSize.height : 0,
            objTop: assetRect.top,
            objBottom: assetRect.bottom,
            objLeft: assetRect.left,
            objRight: assetRect.right,
            percentViewable: viewablePercentage
        };
    };

    ///////////////////////////////////////////////////////////////////////////
    // PRIVATE FUNCTIONS
    ///////////////////////////////////////////////////////////////////////////

    // Check nested iframes
    var getMinViewPortSize = function (){
        var minViewPortSize = getViewPortSize(window),
            minViewPortArea = minViewPortSize.area,
            currentWindow = window;

        while (currentWindow != window.top){
            currentWindow = currentWindow.parent;
            viewPortSize = getViewPortSize(currentWindow);
            if (viewPortSize.area < minViewPortArea){
                minViewPortArea = viewPortSize.area;
                minViewPortSize = viewPortSize;
            }
        }
        return minViewPortSize;
    }


    /**
     * Get the viewport size by taking the smallest dimensions
     */
    var getViewPortSize = function (contextWindow) {
        var viewPortSize = {
            width: Infinity,
            height: Infinity,
            area:Infinity
        };

        //document.body  - Handling case where viewport is represented by documentBody
        //.width
        if (!isNaN(contextWindow.document.body.clientWidth) && contextWindow.document.body.clientWidth > 0) {
            viewPortSize.width = contextWindow.document.body.clientWidth;
        }
        //.height
        if (!isNaN(contextWindow.document.body.clientHeight) && contextWindow.document.body.clientHeight > 0) {
            viewPortSize.height = contextWindow.document.body.clientHeight;
        }
        //document.documentElement - Handling case where viewport is represented by documentElement
        //.width
        if (!!contextWindow.document.documentElement && !!contextWindow.document.documentElement.clientWidth && !isNaN(contextWindow.document.documentElement.clientWidth)) {
            viewPortSize.width = contextWindow.document.documentElement.clientWidth;
        }
        //.height
        if (!!contextWindow.document.documentElement && !!contextWindow.document.documentElement.clientHeight && !isNaN(contextWindow.document.documentElement.clientHeight)) {
            viewPortSize.height = contextWindow.document.documentElement.clientHeight;
        }
        //window.innerWidth/Height - Handling case where viewport is represented by window.innerH/W
        //.innerWidth
        if (!!contextWindow.innerWidth && !isNaN(contextWindow.innerWidth)) {
            viewPortSize.width = Math.min(viewPortSize.width, contextWindow.innerWidth);
        }
        //.innerHeight
        if (!!contextWindow.innerHeight && !isNaN(contextWindow.innerHeight)) {
            viewPortSize.height = Math.min(viewPortSize.height, contextWindow.innerHeight);
        }
        viewPortSize.area = viewPortSize.height * viewPortSize.width;
        return viewPortSize;
    };

    /**
     * Recursive function that return the asset (element) visible dimension
     * @param {element} The element to get his visible dimension
     * @param {contextWindow} The relative window
     */

    var getAssetVisibleDimension = function (element, contextWindow) {
        var currWindow = contextWindow;
        //Set parent window for recursive call
        var parentWindow = contextWindow.parent;
        var resultDimension = { width: 0, height: 0, left: 0, right: 0, top: 0, bottom: 0 };

        if (element) {
            var elementRect = getPositionRelativeToViewPort(element, contextWindow);
            elementRect.width = elementRect.right - elementRect.left;
            elementRect.height = elementRect.bottom - elementRect.top;
            resultDimension = elementRect;
            //Calculate the relative element dimension if we clime to a parent window
            if (currWindow != parentWindow) {
                //Recursive call to get the relative element dimension from the parent window
                var parentDimension = getAssetVisibleDimension(currWindow.frameElement, parentWindow);
                //The asset is partially below the parent window (asset bottom is below the visible window)
                if (parentDimension.bottom < resultDimension.bottom) {
                    if (parentDimension.bottom < resultDimension.top) {
                        //The entire asset is below the parent window
                        resultDimension.top = parentDimension.bottom;
                    }
                    //Set the asset bottom to be the visible part
                    resultDimension.bottom = parentDimension.bottom;
                }
                //The asset is partially right to the parent window
                if (parentDimension.right < resultDimension.right) {
                    if (parentDimension.right < resultDimension.left) {
                        //The entire asset is to the right of the parent window
                        resultDimension.left = parentDimension.right;
                    }
                    //Set the asset right to be the visible
                    resultDimension.right = parentDimension.right;
                }

                resultDimension.width = resultDimension.right - resultDimension.left;
                resultDimension.height = resultDimension.bottom - resultDimension.top;
            }
        }
        return resultDimension;
    };

    var getPositionRelativeToViewPort = function (element, contextWindow) {
        var currWindow = contextWindow;
        var parentWindow = contextWindow.parent;
        var resultPosition = { left: 0, right: 0, top: 0, bottom: 0 };

        if (element) {
            var elementRect = element.getBoundingClientRect();
            if (currWindow != parentWindow) {
                resultPosition = getPositionRelativeToViewPort(currWindow.frameElement, parentWindow);
            }
                resultPosition = {
                    left: elementRect.left + resultPosition.left,
                    right: elementRect.right + resultPosition.left,
                    top: elementRect.top + resultPosition.top,
                    bottom: elementRect.bottom + resultPosition.top
                };
        }
        return resultPosition;
    };
    /**
     * Calculate asset viewable percentage given the asset size and the viewport
     * @param {effectiveAssetRect} the asset viewable rect; effectiveAssetRect = {left :, top :,bottom:,right:,}
     * @param {viewPortSize} the browser viewport size;
     */
    var getAssetViewablePercentage = function (effectiveAssetRect, viewPortSize) {
        // holds the asset viewable surface
        var assetVisibleHeight = 0, assetVisibleWidth = 0;
        var asset = {
            width: effectiveAssetRect.right - effectiveAssetRect.left,
            height: effectiveAssetRect.bottom - effectiveAssetRect.top
        };

        // Ad is 100% out off-view
        if (effectiveAssetRect.bottom < 0 // the entire asset is above the viewport
            || effectiveAssetRect.right < 0 // the entire asset is left to the viewport
            || effectiveAssetRect.top > viewPortSize.height // the entire asset bellow the viewport
            || effectiveAssetRect.left > viewPortSize.width // the entire asset is right to the viewport
            || asset.width <= 0 // the asset width is zero
            || asset.height <= 0)  // the asset height is zero
        {
            return 0;
        }
        // ---- Handle asset visible height ----
        // the asset is partially above the viewport
        if (effectiveAssetRect.top < 0) {
            // take the visible part
            assetVisibleHeight = asset.height + effectiveAssetRect.top;
            //if the asset height is larger then the viewport height, set the asset height to be the viewport height
            if (assetVisibleHeight > viewPortSize.height) {
                assetVisibleHeight = viewPortSize.height;
            }
        }
        // the asset is partially below the viewport
        else if (effectiveAssetRect.top + asset.height > viewPortSize.height) {
            // take the visible part
            assetVisibleHeight = viewPortSize.height - effectiveAssetRect.top;
        }
        // the asset is in the viewport
        else {
            assetVisibleHeight = asset.height;
        }
        // ---- Handle asset visible width ----
        // the asset is partially left to the viewport
        if (effectiveAssetRect.left < 0) {
            // take the visible part
            assetVisibleWidth = asset.width + effectiveAssetRect.left;
            //if the asset width is larger then the viewport width, set the asset width to be the viewport width
            if (assetVisibleWidth > viewPortSize.width) {
                assetVisibleWidth = viewPortSize.width;
            }
        }
        // the asset is partially right to the viewport
        else if (effectiveAssetRect.left + asset.width > viewPortSize.width) {
            // take the visible part
            assetVisibleWidth = viewPortSize.width - effectiveAssetRect.left;
        }
        // the asset is in the viewport
        else {
            assetVisibleWidth = asset.width;
        }
        // Divied the visible asset area by the full asset area to the the visible percentage
        return Math.round((((assetVisibleWidth * assetVisibleHeight)) / (asset.width * asset.height)) * 100);
    };

}

var raimpresion = false;
var raview = false;

if (document.getElementById('rmsSkin3d') != null) {
  var raiad = document.getElementById('rmsSkin3d');
} else {
  var raiad = document.getElementById('pbnetVideo');
}

if(raiad == null){
	raiad = document.getElementById('pnetSkinTablet');
}
if(raiad == null){
	raiad = document.getElementById('pnetSkinPhone');
}
if(raiad == null){
	raiad = document.getElementById('36a33102ac02c8895d0f5bf25c8539fd');
}

var topParent = window;
try{
	while(topParent != topParent.window.parent && topParent.document.getElementById('fb-root') == null){
		topParent = topParent.window.parent;
	}
	var wScreenSize = topParent.screen.width;
	var hScreenSize = topParent.screen.height;
	var wInner = topParent.innerWidth;
	var hInner = topParent.innerHeight;
	var wOuter = topParent.outerWidth;
	var hOuter = topParent.outerHeight;
	var tsc = wInner*hInner;
}catch(e){
	topParent = window;
	var wScreenSize = -1;
	var hScreenSize = -1;
	var wScreenSize = -1;
	var hScreenSize = -1;
	var wInner = -1;
	var hInner = -1;
	var wOuter = -1;
	var hOuter = -1;
	var tsc = -1;
}

var raiua = encodeURI(navigator.userAgent);

var pnetParentSkin = document;

var raisite = pnetParentSkin.rasSitSkin;

if(raisite == null){
	raisite = 0;
}

checkViewability(raiad, function(check){
	if(!raimpresion){
		    setCustomEvent_a7d2fff9bba2741c779995c7b98e5601('a7d2fff9bba2741c779995c7b98e5601', 466, 8547, 12468, 32304, 1, 30, 'vidaextra.com', 'https%3A%2F%2Fwww.vidaextra.com%2Flistas%2Fmejores-juegos-2022');

    if (typeof raMeasurablePix !== 'undefined') {
            setIMGTracking_a7d2fff9bba2741c779995c7b98e5601(raMeasurablePix, 'raMeasurablePix');
    }

		if(raidebug){
		}
		raimpresion = true;
	}
	if(check.viewabiltyStatus && !raview){
		    setCustomEvent_a7d2fff9bba2741c779995c7b98e5601('a7d2fff9bba2741c779995c7b98e5601', 466, 8547, 12468, 32304, 1, 28, 'vidaextra.com', 'https%3A%2F%2Fwww.vidaextra.com%2Flistas%2Fmejores-juegos-2022');

    if (typeof raViewablePix !== 'undefined') {
            setIMGTracking_a7d2fff9bba2741c779995c7b98e5601(raViewablePix, 'raViewablePix');
    }

    if(typeof getImpMraid === "function"){
        if(check.percentViewable >= 1){
            getImpMraid();
        }
    }

    if(raidebug){
		}
		raview = true;
	}
});

var gsDemon = JSON.parse('{"preview":"false","refererDomain":"vidaextra.com","referer":"https%3A%2F%2Fwww.vidaextra.com%2Flistas%2Fmejores-juegos-2022","breadcrumb":["rmsCommon.php","rmsCreaConf.php","skinContentDesktop.php","resizeSkin.php"],"rmsPreview1200":"false"}');

if (gsDemon.preview == "true"){
    if(gsDemon.rmsPreview1200 == "true"){
        window.frameElement.contentDocument.body.classList.add('rms-1200');
    }
}